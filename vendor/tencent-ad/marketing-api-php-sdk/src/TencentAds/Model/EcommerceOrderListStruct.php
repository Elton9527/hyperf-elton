<?php
/**
 * EcommerceOrderListStruct
 *
 * PHP version 5
 *
 * @category Class
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketing API
 *
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace TencentAds\Model;

use \ArrayAccess;
use \TencentAds\ObjectSerializer;

/**
 * EcommerceOrderListStruct Class Doc Comment
 *
 * @category Class
 * @description 订单列表配置
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EcommerceOrderListStruct implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ecommerce_order_list_struct';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'accountId' => 'int',
        'ecommerceOrderId' => 'string',
        'customizedPageName' => 'string',
        'commodityPackageDetail' => 'string',
        'quantity' => 'int',
        'price' => 'int',
        'totalPrice' => 'int',
        'ecommerceOrderTime' => 'string',
        'ecommerceOrderStatus' => '\TencentAds\Model\EcommerceOrderStatus',
        'userName' => 'string',
        'userPhone' => 'string',
        'userProvince' => 'string',
        'userCity' => 'string',
        'userArea' => 'string',
        'userAddress' => 'string',
        'userIp' => 'string',
        'userMessage' => 'string',
        'destinationUrl' => 'string',
        'adgroupId' => 'int',
        'adgroupName' => 'string',
        'fromAccountId' => 'int',
        'deliverySpec' => '\TencentAds\Model\OrderDeliverySpec'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'accountId' => 'int64',
        'ecommerceOrderId' => null,
        'customizedPageName' => null,
        'commodityPackageDetail' => null,
        'quantity' => 'int64',
        'price' => 'int64',
        'totalPrice' => 'int64',
        'ecommerceOrderTime' => null,
        'ecommerceOrderStatus' => null,
        'userName' => null,
        'userPhone' => null,
        'userProvince' => null,
        'userCity' => null,
        'userArea' => null,
        'userAddress' => null,
        'userIp' => null,
        'userMessage' => null,
        'destinationUrl' => null,
        'adgroupId' => 'int64',
        'adgroupName' => null,
        'fromAccountId' => 'int64',
        'deliverySpec' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'accountId' => 'account_id',
        'ecommerceOrderId' => 'ecommerce_order_id',
        'customizedPageName' => 'customized_page_name',
        'commodityPackageDetail' => 'commodity_package_detail',
        'quantity' => 'quantity',
        'price' => 'price',
        'totalPrice' => 'total_price',
        'ecommerceOrderTime' => 'ecommerce_order_time',
        'ecommerceOrderStatus' => 'ecommerce_order_status',
        'userName' => 'user_name',
        'userPhone' => 'user_phone',
        'userProvince' => 'user_province',
        'userCity' => 'user_city',
        'userArea' => 'user_area',
        'userAddress' => 'user_address',
        'userIp' => 'user_ip',
        'userMessage' => 'user_message',
        'destinationUrl' => 'destination_url',
        'adgroupId' => 'adgroup_id',
        'adgroupName' => 'adgroup_name',
        'fromAccountId' => 'from_account_id',
        'deliverySpec' => 'delivery_spec'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'accountId' => 'setAccountId',
        'ecommerceOrderId' => 'setEcommerceOrderId',
        'customizedPageName' => 'setCustomizedPageName',
        'commodityPackageDetail' => 'setCommodityPackageDetail',
        'quantity' => 'setQuantity',
        'price' => 'setPrice',
        'totalPrice' => 'setTotalPrice',
        'ecommerceOrderTime' => 'setEcommerceOrderTime',
        'ecommerceOrderStatus' => 'setEcommerceOrderStatus',
        'userName' => 'setUserName',
        'userPhone' => 'setUserPhone',
        'userProvince' => 'setUserProvince',
        'userCity' => 'setUserCity',
        'userArea' => 'setUserArea',
        'userAddress' => 'setUserAddress',
        'userIp' => 'setUserIp',
        'userMessage' => 'setUserMessage',
        'destinationUrl' => 'setDestinationUrl',
        'adgroupId' => 'setAdgroupId',
        'adgroupName' => 'setAdgroupName',
        'fromAccountId' => 'setFromAccountId',
        'deliverySpec' => 'setDeliverySpec'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'accountId' => 'getAccountId',
        'ecommerceOrderId' => 'getEcommerceOrderId',
        'customizedPageName' => 'getCustomizedPageName',
        'commodityPackageDetail' => 'getCommodityPackageDetail',
        'quantity' => 'getQuantity',
        'price' => 'getPrice',
        'totalPrice' => 'getTotalPrice',
        'ecommerceOrderTime' => 'getEcommerceOrderTime',
        'ecommerceOrderStatus' => 'getEcommerceOrderStatus',
        'userName' => 'getUserName',
        'userPhone' => 'getUserPhone',
        'userProvince' => 'getUserProvince',
        'userCity' => 'getUserCity',
        'userArea' => 'getUserArea',
        'userAddress' => 'getUserAddress',
        'userIp' => 'getUserIp',
        'userMessage' => 'getUserMessage',
        'destinationUrl' => 'getDestinationUrl',
        'adgroupId' => 'getAdgroupId',
        'adgroupName' => 'getAdgroupName',
        'fromAccountId' => 'getFromAccountId',
        'deliverySpec' => 'getDeliverySpec'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['accountId'] = isset($data['accountId']) ? $data['accountId'] : null;
        $this->container['ecommerceOrderId'] = isset($data['ecommerceOrderId']) ? $data['ecommerceOrderId'] : null;
        $this->container['customizedPageName'] = isset($data['customizedPageName']) ? $data['customizedPageName'] : null;
        $this->container['commodityPackageDetail'] = isset($data['commodityPackageDetail']) ? $data['commodityPackageDetail'] : null;
        $this->container['quantity'] = isset($data['quantity']) ? $data['quantity'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['totalPrice'] = isset($data['totalPrice']) ? $data['totalPrice'] : null;
        $this->container['ecommerceOrderTime'] = isset($data['ecommerceOrderTime']) ? $data['ecommerceOrderTime'] : null;
        $this->container['ecommerceOrderStatus'] = isset($data['ecommerceOrderStatus']) ? $data['ecommerceOrderStatus'] : null;
        $this->container['userName'] = isset($data['userName']) ? $data['userName'] : null;
        $this->container['userPhone'] = isset($data['userPhone']) ? $data['userPhone'] : null;
        $this->container['userProvince'] = isset($data['userProvince']) ? $data['userProvince'] : null;
        $this->container['userCity'] = isset($data['userCity']) ? $data['userCity'] : null;
        $this->container['userArea'] = isset($data['userArea']) ? $data['userArea'] : null;
        $this->container['userAddress'] = isset($data['userAddress']) ? $data['userAddress'] : null;
        $this->container['userIp'] = isset($data['userIp']) ? $data['userIp'] : null;
        $this->container['userMessage'] = isset($data['userMessage']) ? $data['userMessage'] : null;
        $this->container['destinationUrl'] = isset($data['destinationUrl']) ? $data['destinationUrl'] : null;
        $this->container['adgroupId'] = isset($data['adgroupId']) ? $data['adgroupId'] : null;
        $this->container['adgroupName'] = isset($data['adgroupName']) ? $data['adgroupName'] : null;
        $this->container['fromAccountId'] = isset($data['fromAccountId']) ? $data['fromAccountId'] : null;
        $this->container['deliverySpec'] = isset($data['deliverySpec']) ? $data['deliverySpec'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets accountId
     *
     * @return int
     */
    public function getAccountId()
    {
        return $this->container['accountId'];
    }

    /**
     * Sets accountId
     *
     * @param int $accountId accountId
     *
     * @return $this
     */
    public function setAccountId($accountId)
    {
        $this->container['accountId'] = $accountId;

        return $this;
    }

    /**
     * Gets ecommerceOrderId
     *
     * @return string
     */
    public function getEcommerceOrderId()
    {
        return $this->container['ecommerceOrderId'];
    }

    /**
     * Sets ecommerceOrderId
     *
     * @param string $ecommerceOrderId ecommerceOrderId
     *
     * @return $this
     */
    public function setEcommerceOrderId($ecommerceOrderId)
    {
        $this->container['ecommerceOrderId'] = $ecommerceOrderId;

        return $this;
    }

    /**
     * Gets customizedPageName
     *
     * @return string
     */
    public function getCustomizedPageName()
    {
        return $this->container['customizedPageName'];
    }

    /**
     * Sets customizedPageName
     *
     * @param string $customizedPageName customizedPageName
     *
     * @return $this
     */
    public function setCustomizedPageName($customizedPageName)
    {
        $this->container['customizedPageName'] = $customizedPageName;

        return $this;
    }

    /**
     * Gets commodityPackageDetail
     *
     * @return string
     */
    public function getCommodityPackageDetail()
    {
        return $this->container['commodityPackageDetail'];
    }

    /**
     * Sets commodityPackageDetail
     *
     * @param string $commodityPackageDetail commodityPackageDetail
     *
     * @return $this
     */
    public function setCommodityPackageDetail($commodityPackageDetail)
    {
        $this->container['commodityPackageDetail'] = $commodityPackageDetail;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return int
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param int $quantity quantity
     *
     * @return $this
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets price
     *
     * @return int
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param int $price price
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets totalPrice
     *
     * @return int
     */
    public function getTotalPrice()
    {
        return $this->container['totalPrice'];
    }

    /**
     * Sets totalPrice
     *
     * @param int $totalPrice totalPrice
     *
     * @return $this
     */
    public function setTotalPrice($totalPrice)
    {
        $this->container['totalPrice'] = $totalPrice;

        return $this;
    }

    /**
     * Gets ecommerceOrderTime
     *
     * @return string
     */
    public function getEcommerceOrderTime()
    {
        return $this->container['ecommerceOrderTime'];
    }

    /**
     * Sets ecommerceOrderTime
     *
     * @param string $ecommerceOrderTime ecommerceOrderTime
     *
     * @return $this
     */
    public function setEcommerceOrderTime($ecommerceOrderTime)
    {
        $this->container['ecommerceOrderTime'] = $ecommerceOrderTime;

        return $this;
    }

    /**
     * Gets ecommerceOrderStatus
     *
     * @return \TencentAds\Model\EcommerceOrderStatus
     */
    public function getEcommerceOrderStatus()
    {
        return $this->container['ecommerceOrderStatus'];
    }

    /**
     * Sets ecommerceOrderStatus
     *
     * @param \TencentAds\Model\EcommerceOrderStatus $ecommerceOrderStatus ecommerceOrderStatus
     *
     * @return $this
     */
    public function setEcommerceOrderStatus($ecommerceOrderStatus)
    {
        $this->container['ecommerceOrderStatus'] = $ecommerceOrderStatus;

        return $this;
    }

    /**
     * Gets userName
     *
     * @return string
     */
    public function getUserName()
    {
        return $this->container['userName'];
    }

    /**
     * Sets userName
     *
     * @param string $userName userName
     *
     * @return $this
     */
    public function setUserName($userName)
    {
        $this->container['userName'] = $userName;

        return $this;
    }

    /**
     * Gets userPhone
     *
     * @return string
     */
    public function getUserPhone()
    {
        return $this->container['userPhone'];
    }

    /**
     * Sets userPhone
     *
     * @param string $userPhone userPhone
     *
     * @return $this
     */
    public function setUserPhone($userPhone)
    {
        $this->container['userPhone'] = $userPhone;

        return $this;
    }

    /**
     * Gets userProvince
     *
     * @return string
     */
    public function getUserProvince()
    {
        return $this->container['userProvince'];
    }

    /**
     * Sets userProvince
     *
     * @param string $userProvince userProvince
     *
     * @return $this
     */
    public function setUserProvince($userProvince)
    {
        $this->container['userProvince'] = $userProvince;

        return $this;
    }

    /**
     * Gets userCity
     *
     * @return string
     */
    public function getUserCity()
    {
        return $this->container['userCity'];
    }

    /**
     * Sets userCity
     *
     * @param string $userCity userCity
     *
     * @return $this
     */
    public function setUserCity($userCity)
    {
        $this->container['userCity'] = $userCity;

        return $this;
    }

    /**
     * Gets userArea
     *
     * @return string
     */
    public function getUserArea()
    {
        return $this->container['userArea'];
    }

    /**
     * Sets userArea
     *
     * @param string $userArea userArea
     *
     * @return $this
     */
    public function setUserArea($userArea)
    {
        $this->container['userArea'] = $userArea;

        return $this;
    }

    /**
     * Gets userAddress
     *
     * @return string
     */
    public function getUserAddress()
    {
        return $this->container['userAddress'];
    }

    /**
     * Sets userAddress
     *
     * @param string $userAddress userAddress
     *
     * @return $this
     */
    public function setUserAddress($userAddress)
    {
        $this->container['userAddress'] = $userAddress;

        return $this;
    }

    /**
     * Gets userIp
     *
     * @return string
     */
    public function getUserIp()
    {
        return $this->container['userIp'];
    }

    /**
     * Sets userIp
     *
     * @param string $userIp userIp
     *
     * @return $this
     */
    public function setUserIp($userIp)
    {
        $this->container['userIp'] = $userIp;

        return $this;
    }

    /**
     * Gets userMessage
     *
     * @return string
     */
    public function getUserMessage()
    {
        return $this->container['userMessage'];
    }

    /**
     * Sets userMessage
     *
     * @param string $userMessage userMessage
     *
     * @return $this
     */
    public function setUserMessage($userMessage)
    {
        $this->container['userMessage'] = $userMessage;

        return $this;
    }

    /**
     * Gets destinationUrl
     *
     * @return string
     */
    public function getDestinationUrl()
    {
        return $this->container['destinationUrl'];
    }

    /**
     * Sets destinationUrl
     *
     * @param string $destinationUrl destinationUrl
     *
     * @return $this
     */
    public function setDestinationUrl($destinationUrl)
    {
        $this->container['destinationUrl'] = $destinationUrl;

        return $this;
    }

    /**
     * Gets adgroupId
     *
     * @return int
     */
    public function getAdgroupId()
    {
        return $this->container['adgroupId'];
    }

    /**
     * Sets adgroupId
     *
     * @param int $adgroupId adgroupId
     *
     * @return $this
     */
    public function setAdgroupId($adgroupId)
    {
        $this->container['adgroupId'] = $adgroupId;

        return $this;
    }

    /**
     * Gets adgroupName
     *
     * @return string
     */
    public function getAdgroupName()
    {
        return $this->container['adgroupName'];
    }

    /**
     * Sets adgroupName
     *
     * @param string $adgroupName adgroupName
     *
     * @return $this
     */
    public function setAdgroupName($adgroupName)
    {
        $this->container['adgroupName'] = $adgroupName;

        return $this;
    }

    /**
     * Gets fromAccountId
     *
     * @return int
     */
    public function getFromAccountId()
    {
        return $this->container['fromAccountId'];
    }

    /**
     * Sets fromAccountId
     *
     * @param int $fromAccountId fromAccountId
     *
     * @return $this
     */
    public function setFromAccountId($fromAccountId)
    {
        $this->container['fromAccountId'] = $fromAccountId;

        return $this;
    }

    /**
     * Gets deliverySpec
     *
     * @return \TencentAds\Model\OrderDeliverySpec
     */
    public function getDeliverySpec()
    {
        return $this->container['deliverySpec'];
    }

    /**
     * Sets deliverySpec
     *
     * @param \TencentAds\Model\OrderDeliverySpec $deliverySpec deliverySpec
     *
     * @return $this
     */
    public function setDeliverySpec($deliverySpec)
    {
        $this->container['deliverySpec'] = $deliverySpec;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


