<?php
/**
 * EstimationGetRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketing API
 *
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace TencentAds\Model;

use \ArrayAccess;
use \TencentAds\ObjectSerializer;

/**
 * EstimationGetRequest Class Doc Comment
 *
 * @category Class
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EstimationGetRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'EstimationGetRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'campaignSpec' => '\TencentAds\Model\CampaignTargeting',
        'sceneSpec' => '\TencentAds\Model\EstimationSceneTargeting',
        'accountId' => 'int',
        'adcreative' => '\TencentAds\Model\CreativeStruct[]',
        'targeting' => '\TencentAds\Model\EstimationReadTargetingSetting',
        'adgroup' => '\TencentAds\Model\AdgroupSetting'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'campaignSpec' => null,
        'sceneSpec' => null,
        'accountId' => 'int64',
        'adcreative' => null,
        'targeting' => null,
        'adgroup' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'campaignSpec' => 'campaign_spec',
        'sceneSpec' => 'scene_spec',
        'accountId' => 'account_id',
        'adcreative' => 'adcreative',
        'targeting' => 'targeting',
        'adgroup' => 'adgroup'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'campaignSpec' => 'setCampaignSpec',
        'sceneSpec' => 'setSceneSpec',
        'accountId' => 'setAccountId',
        'adcreative' => 'setAdcreative',
        'targeting' => 'setTargeting',
        'adgroup' => 'setAdgroup'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'campaignSpec' => 'getCampaignSpec',
        'sceneSpec' => 'getSceneSpec',
        'accountId' => 'getAccountId',
        'adcreative' => 'getAdcreative',
        'targeting' => 'getTargeting',
        'adgroup' => 'getAdgroup'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['campaignSpec'] = isset($data['campaignSpec']) ? $data['campaignSpec'] : null;
        $this->container['sceneSpec'] = isset($data['sceneSpec']) ? $data['sceneSpec'] : null;
        $this->container['accountId'] = isset($data['accountId']) ? $data['accountId'] : null;
        $this->container['adcreative'] = isset($data['adcreative']) ? $data['adcreative'] : null;
        $this->container['targeting'] = isset($data['targeting']) ? $data['targeting'] : null;
        $this->container['adgroup'] = isset($data['adgroup']) ? $data['adgroup'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets campaignSpec
     *
     * @return \TencentAds\Model\CampaignTargeting
     */
    public function getCampaignSpec()
    {
        return $this->container['campaignSpec'];
    }

    /**
     * Sets campaignSpec
     *
     * @param \TencentAds\Model\CampaignTargeting $campaignSpec campaignSpec
     *
     * @return $this
     */
    public function setCampaignSpec($campaignSpec)
    {
        $this->container['campaignSpec'] = $campaignSpec;

        return $this;
    }

    /**
     * Gets sceneSpec
     *
     * @return \TencentAds\Model\EstimationSceneTargeting
     */
    public function getSceneSpec()
    {
        return $this->container['sceneSpec'];
    }

    /**
     * Sets sceneSpec
     *
     * @param \TencentAds\Model\EstimationSceneTargeting $sceneSpec sceneSpec
     *
     * @return $this
     */
    public function setSceneSpec($sceneSpec)
    {
        $this->container['sceneSpec'] = $sceneSpec;

        return $this;
    }

    /**
     * Gets accountId
     *
     * @return int
     */
    public function getAccountId()
    {
        return $this->container['accountId'];
    }

    /**
     * Sets accountId
     *
     * @param int $accountId accountId
     *
     * @return $this
     */
    public function setAccountId($accountId)
    {
        $this->container['accountId'] = $accountId;

        return $this;
    }

    /**
     * Gets adcreative
     *
     * @return \TencentAds\Model\CreativeStruct[]
     */
    public function getAdcreative()
    {
        return $this->container['adcreative'];
    }

    /**
     * Sets adcreative
     *
     * @param \TencentAds\Model\CreativeStruct[] $adcreative adcreative
     *
     * @return $this
     */
    public function setAdcreative($adcreative)
    {
        $this->container['adcreative'] = $adcreative;

        return $this;
    }

    /**
     * Gets targeting
     *
     * @return \TencentAds\Model\EstimationReadTargetingSetting
     */
    public function getTargeting()
    {
        return $this->container['targeting'];
    }

    /**
     * Sets targeting
     *
     * @param \TencentAds\Model\EstimationReadTargetingSetting $targeting targeting
     *
     * @return $this
     */
    public function setTargeting($targeting)
    {
        $this->container['targeting'] = $targeting;

        return $this;
    }

    /**
     * Gets adgroup
     *
     * @return \TencentAds\Model\AdgroupSetting
     */
    public function getAdgroup()
    {
        return $this->container['adgroup'];
    }

    /**
     * Sets adgroup
     *
     * @param \TencentAds\Model\AdgroupSetting $adgroup adgroup
     *
     * @return $this
     */
    public function setAdgroup($adgroup)
    {
        $this->container['adgroup'] = $adgroup;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


