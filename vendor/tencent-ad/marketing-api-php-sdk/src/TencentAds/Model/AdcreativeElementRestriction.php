<?php
/**
 * AdcreativeElementRestriction
 *
 * PHP version 5
 *
 * @category Class
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketing API
 *
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace TencentAds\Model;

use \ArrayAccess;
use \TencentAds\ObjectSerializer;

/**
 * AdcreativeElementRestriction Class Doc Comment
 *
 * @category Class
 * @description 广告创意元素需满足的限制条件
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AdcreativeElementRestriction implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'adcreative_element_restriction';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'textRestriction' => '\TencentAds\Model\TextRestriction',
        'imageRestriction' => '\TencentAds\Model\ImageRestriction',
        'urlRestriction' => '\TencentAds\Model\UrlRestriction',
        'videoRestriction' => '\TencentAds\Model\VideoRestriction',
        'numberRestriction' => '\TencentAds\Model\NumberRestriction'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'textRestriction' => null,
        'imageRestriction' => null,
        'urlRestriction' => null,
        'videoRestriction' => null,
        'numberRestriction' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'textRestriction' => 'text_restriction',
        'imageRestriction' => 'image_restriction',
        'urlRestriction' => 'url_restriction',
        'videoRestriction' => 'video_restriction',
        'numberRestriction' => 'number_restriction'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'textRestriction' => 'setTextRestriction',
        'imageRestriction' => 'setImageRestriction',
        'urlRestriction' => 'setUrlRestriction',
        'videoRestriction' => 'setVideoRestriction',
        'numberRestriction' => 'setNumberRestriction'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'textRestriction' => 'getTextRestriction',
        'imageRestriction' => 'getImageRestriction',
        'urlRestriction' => 'getUrlRestriction',
        'videoRestriction' => 'getVideoRestriction',
        'numberRestriction' => 'getNumberRestriction'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['textRestriction'] = isset($data['textRestriction']) ? $data['textRestriction'] : null;
        $this->container['imageRestriction'] = isset($data['imageRestriction']) ? $data['imageRestriction'] : null;
        $this->container['urlRestriction'] = isset($data['urlRestriction']) ? $data['urlRestriction'] : null;
        $this->container['videoRestriction'] = isset($data['videoRestriction']) ? $data['videoRestriction'] : null;
        $this->container['numberRestriction'] = isset($data['numberRestriction']) ? $data['numberRestriction'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets textRestriction
     *
     * @return \TencentAds\Model\TextRestriction
     */
    public function getTextRestriction()
    {
        return $this->container['textRestriction'];
    }

    /**
     * Sets textRestriction
     *
     * @param \TencentAds\Model\TextRestriction $textRestriction textRestriction
     *
     * @return $this
     */
    public function setTextRestriction($textRestriction)
    {
        $this->container['textRestriction'] = $textRestriction;

        return $this;
    }

    /**
     * Gets imageRestriction
     *
     * @return \TencentAds\Model\ImageRestriction
     */
    public function getImageRestriction()
    {
        return $this->container['imageRestriction'];
    }

    /**
     * Sets imageRestriction
     *
     * @param \TencentAds\Model\ImageRestriction $imageRestriction imageRestriction
     *
     * @return $this
     */
    public function setImageRestriction($imageRestriction)
    {
        $this->container['imageRestriction'] = $imageRestriction;

        return $this;
    }

    /**
     * Gets urlRestriction
     *
     * @return \TencentAds\Model\UrlRestriction
     */
    public function getUrlRestriction()
    {
        return $this->container['urlRestriction'];
    }

    /**
     * Sets urlRestriction
     *
     * @param \TencentAds\Model\UrlRestriction $urlRestriction urlRestriction
     *
     * @return $this
     */
    public function setUrlRestriction($urlRestriction)
    {
        $this->container['urlRestriction'] = $urlRestriction;

        return $this;
    }

    /**
     * Gets videoRestriction
     *
     * @return \TencentAds\Model\VideoRestriction
     */
    public function getVideoRestriction()
    {
        return $this->container['videoRestriction'];
    }

    /**
     * Sets videoRestriction
     *
     * @param \TencentAds\Model\VideoRestriction $videoRestriction videoRestriction
     *
     * @return $this
     */
    public function setVideoRestriction($videoRestriction)
    {
        $this->container['videoRestriction'] = $videoRestriction;

        return $this;
    }

    /**
     * Gets numberRestriction
     *
     * @return \TencentAds\Model\NumberRestriction
     */
    public function getNumberRestriction()
    {
        return $this->container['numberRestriction'];
    }

    /**
     * Sets numberRestriction
     *
     * @param \TencentAds\Model\NumberRestriction $numberRestriction numberRestriction
     *
     * @return $this
     */
    public function setNumberRestriction($numberRestriction)
    {
        $this->container['numberRestriction'] = $numberRestriction;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


